#! /usr/bin/env bash

# Git commit, push
function gcp() {
    git commit -m "[`git rev-parse --abbrev-ref HEAD | grep --only-matching -E 'CAI-[0-9]+'`] $1"
    # git commit -m "$1"
    git push
}

# Git add, commit
function gac() {
    git add .
    git commit -a -m "$1"
}

# Git add, commit, push
function gacp() {
    git add .
    # git commit -m "[`git rev-parse --abbrev-ref HEAD | grep --only-matching -E 'CAI-[0-9]+'`] $1"
    git commit -a -m "$1"
    git push
}

# Sneak changes into your previous commit and force push remote
function gacpp() {
    git add .
    git commit --amend --no-edit # git push -f
    git push origin "$1" --force-with-lease # --force-with-lease ensures you do not overwrite the commits of others that have been pushed to the remote branch since your last commit!
}

# Sneak changes into previous commit - git add commit amend
function gaca() {
  git add .
  git commit --amend --no-edit
}

# git push --force-with-lease
function gpf() {
  git push origin "$1" --force-with-lease # --force-with-lease ensures you do not overwrite the commits of others that have been pushed to the remote branch since your last commit!
}

# Git create branch
function gcb() {
    git fetch
    git pull
    git checkout -b "$1"
    git push -u origin "$1"
}

# Git create local branch
function gclb() {
    git fetch
    git pull
    git checkout -b "$1"
}

# Git checkout
function gc() {
    git checkout "$1"
}

# git delete local & remote branch
function gdb () {
    git branch -D "$1"
    echo "Deleted ${$1} locally"
    git push origin --delete "$1"
    echo "Deleted ${$1} remotely"
}

# git delete remote branch
function gdrb () {
    git push origin --delete "$1"
}

# git delete local branch
function gdlb () {
    git branch -D "$1"
}

function int() {
  open -a "IntelliJ IDEA.app" "$1"
}

# Git commands
alias gs='git status'
alias gb='git branch'
alias gf='git fetch'
alias gpull='git pull'
alias gpush='git push'
alias gd="git diff -- . ':(exclude)*package-lock.json' ':(exclude)*yarn.lock'"
alias gl="git log -n10 --pretty=format:'%Cred%h %Cgreen%ad %Cblue%an %Creset%s' --date='format:%y.%m.%d %H:%M'"
alias glf="git log -n10 --pretty=format:'%Cred%h %Cgreen%ad %Cblue%an %Creset%s' --numstat --date='format:%y.%m.%d %H:%M'"
alias gst='git stash'
alias gstp='git stash pop'
alias gsts="git stash show -p"
alias nuke='git reset --hard && git clean -f -d'
alias meganuke='git reset --hard HEAD~1 && git clean -f -d'
alias gc-='git checkout -'
alias gcd='git checkout develop'
alias gpod='git pull origin develop'
alias gcm='git checkout master'
alias gpom='git pull origin master'
alias gitremoteurl="git config --get remote.origin.url"
alias hg='history|grep '

# DOCKER
# alias startdev='cd ~/git/core-local-env && docker-compose up -d'
alias startdev='cd ~/git/core-local-env && docker-compose up -d consumer_skybet core_web account_api'
alias startdevall='cd ~/git/core-local-env && docker-compose up -d account auth_provider consumer_skybet core_web customer_data test_consumer'
alias stopdev='cd ~/git/core-local-env && docker-compose stop'
alias downdev='cd ~/git/core-local-env && docker-compose down'
alias dcu='docker-compose up -d'
alias dcd='docker-compose down'
alias dcps='docker-compose ps'
alias dps='docker ps'
function dcu() {
  docker-compose up "$1"
}
alias coredir='cd ~/git/core-local-env'

# File shortcuts
alias bashreset='source ~/.bash_profile'
alias bashedit='open -a "Visual Studio Code" ~/sites/dotfiles/.bash_profile'
alias basheditroot='open -a "Visual Studio Code" ~/.bash_profile'
# alias bashreset='source ~/sites/dotfiles/.bash_profile'
alias aliasedit='open -a "Visual Studio Code" ~/sites/dotfiles/.alias'
alias aliasreset='source ~/sites/dotfiles/.alias'
alias gitedit='open -a "Visual Studio Code" ~/sites/dotfiles/.gitconfig'
alias vscedit='code ~/Library/Application\ Support/Code/User/settings.json'
alias bashhistory='open -a "Visual Studio Code" ~/.bash_history'
alias chrome='open -a "Google Chrome" .'

# Utilities
alias listall='ls -a -l'
alias tree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"
# LOL don't be Jamon, ty Josh Manders - https://github.com/joshmanders/dotfiles/blob/master/config.fish#L49
# https://twitter.com/jamonholmgren/status/967548502648668161
alias rm="trash"

# Time data
alias waketime="sysctl -a |grep waketime"
alias sleeptime="sysctl -a |grep sleeptime"
alias boottime="sysctl -a |grep kern.boottime"

# NPM shortcuts
alias nrs='npm run start'
alias nrt='npm run test'
alias nrd='npm run dev'
alias nrb='npm run build'
alias nrbs='npm run build && npm run start'
alias nre='npm run export'
alias reyarn='trash yarn.lock && trash node_modules/; yarn'
alias renpm='trash package-lock.json && trash -f node_modules/; npm i'
alias rmmodules='find . -name node_modules -type d -prune -exec trash {} +'
alias npmlistg='npm list -g --depth 0'
alias npmlistglobal='npm list -g --depth 0'
alias npmlist='npm list --depth 0'

function nr() {
  npm run "$1"
}

function npml() {
  npm list "$1"
}
function npmvv() {
  npm view "$1" versions
}

# usage 'nodelink 8'
linknode() {
    brew link --overwrite node@$1 --force
}
unlinknode() {
    brew unlink --overwrite node@$1 --force
}

# Sneak changes into your previous commit
# alias sneak='git commit -a --amend --no-edit'
# Undo the last commit, but preserve the staging area
# alias undo='git reset --soft HEAD^'
# Show number of commits from all authors.
alias stats='git shortlog -sn --all --no-merges'
# See everything everyone has done recently
alias overview='git log --oneline --no-merges'
# See everything I have done recently
# alias recap='git log --oneline --no-merges --author=cashley.connolly@skybettingandgaming.com'
# See todayâ€™s work
# alias today='git log --since=\"00:00:00\" --all --no-merges --oneline --author=cashley.connolly@skybettingandgaming.com'

# alias ll='ls -la'

# Updating git ignore - untracked file removal
# commit current changes or you will lose them
# git rm -r --cached .
# git add .
# git commit -m "fixed untracked files"

# Get the current branch name (not so useful in itself, but used in
# other aliases)
# alias branchname='git rev-parse --abbrev-ref HEAD'

# Push the current branch to the remote "origin", and set it to track
# the upstream branch
# alias publish='git push -u origin $(alias branchname)'

# For loop to open all subdirectories in vscode
# function openfoldersincode() {
#   declare -a dirs
#   i=1
#   for d in */
#   do
#       dirs[i++]="${d%/}"
#   done
#   echo "There are ${#dirs[@]} dirs in the current path."
#   for((i=1;i<=${#dirs[@]};i++))
#   do
#       echo $i "${dirs[i]}"
#       code "${dirs[i]}"
#   done
#   # https://stackoverflow.com/a/4494667/2627434 - select works too for interactive selection
#   # echo "which dir do you want?"
#   # echo -n "> "
#   # read i
#   # echo "you selected ${dirs[$i]}"
#   # cd "${dirs[$i]}"
# }

# For loop for opening an array of folders in vscode
function openincode() {
  # create array
  declare -a arr1=(
    "sites/test"
    "sites/test2"
  )

  #now loop through the above array
  cd ~
  for i in "${arr1[@]}"
  do
    code "$i"
    # git branch -d "$i"
    # or do whatever with individual element of the array
  done
}

# For loop for opening an array of folders in vscode
function deleteBranches() {
  declare -a arr1=(
  "CAI-1096-update-journeys"
  "CAI-399-self-exclusion"
  )

  for i in "${arr1[@]}"
  do
    git branch -d "$i"
  done
}

# nvm commands
# nvm install 8.16.0
# nvm use 8.16.0

# brew commands:
# brew doctor
# brew search node
# brew uninstall node
# brew uninstall --force node
# brew prune
# brew unlink --overwrite node@8 --force
# brew link --overwrite node@6
# brew link --overwrite --dry-run node@8 (to show files that will be deleted)
# brew link --overwrite node@6 --force